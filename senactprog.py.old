# -*- coding: utf-8 -*-
import mysql.connector
import datetime
import time

def ugasni(k):
    print("Ugašam %d"%k)
    return

def prizgi(k):
    print("Prižigam %d"%k)
    return

try:
    cnx = mysql.connector.connect(user='boris', password='tejkica00',
                              host='localhost',
                              database='senact')
    cursor = cnx.cursor()
except mysql.connector.Error as err:
  if err.errno == errorcode.ER_ACCESS_DENIED_ERROR:
    print("Something is wrong with your user name or password")
  elif err.errno == errorcode.ER_BAD_DB_ERROR:
    print("Database does not exist")
  else:
    print(err)
else:
    oldstates={}
    while 1:
        try:
            states={}
            query = ("select distinct a.name as ACTIVATOR, a.id as ID, case when c.sensorId is null then 0 else a.state end as STATE, case when c.sensorId is null then null else b.name end as SENSOR, case when c.sensorId is null then null else b.T end as T, case when c.sensorId is null then null else b.TL end as TON, case when c.sensorId is null then null else b.TH end as TOFF, c.start_time as START, c.stop_time as STOP, c.month as MESEC, c.week as TEDEN, c.day as DAN, c.dayinweek as DANTEDNA from programs c,activators a, sensors b where c.start_time<TIME(NOW()) and c.stop_time>=TIME(NOW()) and (c.month is null or c.month=MONTH(NOW())) and (c.week is null or c.week=WEEKOFYEAR(now())) and (c.day is null or c.day=day(now())) and (c.dayinweek is null or c.dayinweek=dayofweek(now())) and ((a.state in (0,2) and (b.T < b.TL)) or (a.state in (1,3) and (b.T > b.TH))) and (c.activatorId=a.id) and (c.sensorId is null or c.sensorId=b.id)")
            cursor.execute(query);
            for (ACTIVATOR, ID, STATE, SENSOR, T, TON, TOFF, START, STOP, MESEC, DAN, TEDEN, DANTEDNA) in cursor:
                if SENSOR != None:
                    states[ID]=STATE
                else:
                    states[ID]=5
                print("{},{},{},{},{},{},{},{},{},{},{},{},{}".format(ACTIVATOR, ID, STATE, SENSOR, T, TON, TOFF, START, STOP, MESEC, DAN, TEDEN, DANTEDNA))

            for k in states:
                if states[k]==0:
                   prizgi(k)
                else:
                    if states[k]==2:
                        prizgi(k)
                    else:
                        if states[k]!=5:
                            ugasni(k)
                        else:
                            print "Standby..."
        
            for k in oldstates:
                if states.has_key(k)==False:
                    ugasni(k)

            oldstates=states.copy()
            time.sleep(10)
        except KeyboardInterrupt:
            cursor.close()
            cnx.close()
